@startuml
actor Cliente
participant "View\nAgendamentoView" as View
participant "ValidadorAcesso" as Validador #LightYellow
participant "Form\nAgendamentoForm" as Form
participant "Model\nAgendamento" as Agendamento
participant "Service\nNotificacao" as Notify
database "Database" as DB

' Início - Tentativa de acesso
Cliente -> View: Tenta acessar agendamento
activate View

' Include: Validar Acesso
View -> Validador: validarAcesso()
activate Validador

Validador -> DB: Verifica autenticação
Validador -> DB: Verifica permissões
alt Acesso Inválido
    Validador --> View: Acesso negado
    View --> Cliente: Redireciona para login
    note right: Include: Validar Acesso falhou
else Acesso Válido
    Validador --> View: Acesso permitido
    deactivate Validador

    ' Continua fluxo de agendamento
    View --> Cliente: Exibe formulário de agendamento
    
    Cliente -> View: Submete dados do agendamento
    View -> Form: Valida dados
    activate Form
    
    Form -> Form: Valida data
    Form -> Form: Valida serviço
    
    alt Dados Inválidos
        Form --> View: Retorna erros
        View --> Cliente: Exibe mensagens de erro
    else Dados Válidos
        Form --> View: Dados validados
        
        View -> Agendamento: Cria agendamento
        activate Agendamento
        Agendamento -> DB: Salva agendamento
        Agendamento --> View: Retorna agendamento
        deactivate Agendamento
        
        View -> Notify: Envia confirmações
        activate Notify
        Notify -> DB: Registra notificação
        Notify --> View: Confirma envio
        deactivate Notify
        
        View --> Cliente: Confirma agendamento
    end
    deactivate Form
end

deactivate View

@endum